/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ArrayList<Integer> postorderTraversal(TreeNode root) 
    {
        ArrayList<Integer> res = new ArrayList<Integer>();
        posthelp(res, root);
        return res;
    }
    
    public static void posthelp(ArrayList<Integer> res, TreeNode root)
    {
        if(root == null) return;
        ArrayList<Integer> left = new ArrayList<Integer> ();
        ArrayList<Integer> right = new ArrayList<Integer> ();
        posthelp(left, root.left);
        posthelp(right, root.right);
        int i;
        for(i=0; i<left.size(); i++)
            res.add(left.get(i));
        for(i=0; i<right.size(); i++)
            res.add(right.get(i));
        res.add(root.val);
    }
}
